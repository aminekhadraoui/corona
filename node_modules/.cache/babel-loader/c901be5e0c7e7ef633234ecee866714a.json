{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\SOA\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  data: {\n    confirmed,\n    deaths,\n    recovered\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    if (country) {\n      const fetchAPI = async () => {\n        const response = await fetchDailyData();\n\n        if (response) {\n          setDailyData(response);\n        }\n      }; //console.log(dailyData);\n\n\n      fetchAPI();\n    }\n  }, [country]);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: '#3333ff',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        // borderColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(0,0,255,0.5)', 'rgba(0,255,0,0.5)', 'rgba(255,0,0,0.5)'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/HP/Desktop/SOA/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","response","lineChart","length","labels","map","date","datasets","label","borderColor","fill","barChart","backgroundColor","value","legend","display","title","text","container"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAASC,IAAT,EAAeC,GAAf,QAAyB,iBAAzB;AAEA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,IAAI,EAAG;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAAR;AAAyCC,EAAAA;AAAzC,CAAD,KAAuD;AACjE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,OAAH,EAAW;AACP,YAAMG,QAAQ,GAAG,YAAY;AACzB,cAAMC,QAAQ,GAAC,MAAMb,cAAc,EAAnC;;AACA,YAAGa,QAAH,EAAY;AAERF,UAAAA,YAAY,CAACE,QAAD,CAAZ;AACH;AACJ,OAND,CADO,CASP;;;AAEAD,MAAAA,QAAQ;AACX;AAEJ,GAfQ,EAeL,CAACH,OAAD,CAfK,CAAT;AAkBA,QAAMK,SAAS,GACXJ,SAAS,CAACK,MAAV,gBAEA,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEN,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPd,QAAAA,IAAI,EAAEK,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEX,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPc,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,SAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAMV;AACIjB,QAAAA,IAAI,EAAEK,SAAS,CAACO,GAAV,CAAc,CAAC;AAAEV,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADV;AAEIa,QAAAA,KAAK,EAAE,QAFX;AAGIC,QAAAA,WAAW,EAAC,KAHhB;AAIG;AACCC,QAAAA,IAAI,EAAE;AALV,OANU;AAFR,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,GAmBK,IApBT;AAwBA,QAAMC,QAAQ,GACVjB,SAAS,gBAEL,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE;AACFU,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADN;AAEFG,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,QADA;AAEPI,QAAAA,eAAe,EAAG,CACd,mBADc,EAEd,mBAFc,EAGd,mBAHc,CAFX;AAQXnB,QAAAA,IAAI,EAAE,CAAEC,SAAS,CAACmB,KAAZ,EAAmBjB,SAAS,CAACiB,KAA7B,EAAoClB,MAAM,CAACkB,KAA3C;AARK,OAAD;AAFR,KADV;AAgBI,IAAA,OAAO,EAAG;AACNC,MAAAA,MAAM,EAAG;AAACC,QAAAA,OAAO,EAAE;AAAV,OADH;AAENC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAC,IAAV;AAAgBE,QAAAA,IAAI,EAAE,oBAAmBpB,OAAQ;AAAjD;AAFD,KAhBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,GAuBN,IAxBP;AA2BA,sBACG;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC2B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKrB,OAAO,GAAGc,QAAH,GAAcT,SAD1B,CADH;AAKH,CA7ED;;AAiFA,eAAeV,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {fetchDailyData} from '../../api';\nimport { Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data : { confirmed, deaths, recovered}, country}) => {\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n        if(country){\n            const fetchAPI = async () => {\n                const response=await fetchDailyData()\n                if(response){\n    \n                    setDailyData(response);\n                }\n            }\n    \n            //console.log(dailyData);\n    \n            fetchAPI();\n        }\n\n    } , [country]);\n    \n\n    const lineChart = (\n        dailyData.length\n        ?(\n        <Line\n        data={{\n            labels: dailyData.map(({ date }) => date),\n            datasets: [{\n                data: dailyData.map(({ confirmed }) => confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n            }, \n            {\n                data: dailyData.map(({ deaths }) => deaths),\n                label: 'Deaths',\n                borderColor:'red',\n               // borderColor: 'rgba(255,0,0,0.5)',\n                fill: true,\n            }],\n        }}\n        />) :null\n    );\n\n\n    const barChart = (\n        confirmed\n        ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor : [\n                            'rgba(0,0,255,0.5)',\n                            'rgba(0,255,0,0.5)',\n                            'rgba(255,0,0,0.5)',\n                    ],\n\n                    data: [ confirmed.value, recovered.value, deaths.value]\n\n                    }]                    \n                }}\n\n                options= {{\n                    legend : {display: false},\n                    title: { display:true, text:`Current state in ${country}`},\n                }}\n            />\n        ) :null\n    )\n\n    return( \n       <div className={styles.container}>\n           {country ? barChart : lineChart}\n       </div>\n    )\n}\n\n\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}