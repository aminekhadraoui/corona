{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\COVID-19-Tracker-App-master\\\\src\\\\components\\\\CountryPicker\\\\CountryPickerAutoCompleteDropdown.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport cx from \"classnames\";\nimport { FormControl, StylesProvider, Typography } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchcountries } from \"../../api\";\n\nconst formatOptionsForSelect = options => options.map(option => ({\n  value: option,\n  label: option\n}));\n\nconst CountryPickerAutoCompleteDropdown = ({\n  handleCountryChange\n}) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries((await fetchcountries()));\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n  return /*#__PURE__*/React.createElement(FormControl, {\n    className: cx(styles.formControl, StylesProvider.formControl),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: cx(styles.selectLabel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Select a Country:\"), /*#__PURE__*/React.createElement(Select, {\n    options: formatOptionsForSelect(fetchedCountries),\n    isSearchable: true,\n    placeholder: \"Global\",\n    onChange: e => {\n      handleCountryChange(e.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default CountryPickerAutoCompleteDropdown;","map":{"version":3,"sources":["C:/Users/HP/Desktop/COVID-19-Tracker-App-master/src/components/CountryPicker/CountryPickerAutoCompleteDropdown.jsx"],"names":["React","useState","useEffect","Select","cx","FormControl","StylesProvider","Typography","styles","fetchcountries","formatOptionsForSelect","options","map","option","value","label","CountryPickerAutoCompleteDropdown","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","formControl","selectLabel","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,WAAT,EAAsBC,cAAtB,EAAsCC,UAAtC,QAAwD,mBAAxD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,QAA+B,WAA/B;;AAEA,MAAMC,sBAAsB,GAAIC,OAAD,IAC7BA,OAAO,CAACC,GAAR,CAAaC,MAAD,KAAa;AAAEC,EAAAA,KAAK,EAAED,MAAT;AAAiBE,EAAAA,KAAK,EAAEF;AAAxB,CAAb,CAAZ,CADF;;AAGA,MAAMG,iCAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA6B;AACrE,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0ClB,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,QAAQ,GAAG,YAAY;AAC3BD,MAAAA,mBAAmB,EAAC,MAAMV,cAAc,EAArB,EAAnB;AACD,KAFD;;AAGAW,IAAAA,QAAQ;AACT,GALQ,EAKN,CAACD,mBAAD,CALM,CAAT;AAOA,sBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEf,EAAE,CAACI,MAAM,CAACa,WAAR,EAAqBf,cAAc,CAACe,WAApC,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEjB,EAAE,CAACI,MAAM,CAACc,WAAR,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAIE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEZ,sBAAsB,CAACQ,gBAAD,CADjC;AAEE,IAAA,YAAY,EAAE,IAFhB;AAGE,IAAA,WAAW,EAAC,QAHd;AAIE,IAAA,QAAQ,EAAGK,CAAD,IAAO;AACfN,MAAAA,mBAAmB,CAACM,CAAC,CAACT,KAAH,CAAnB;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAeD,CAzBD;;AA2BA,eAAeE,iCAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport cx from \"classnames\";\nimport { FormControl, StylesProvider, Typography } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchcountries } from \"../../api\";\n\nconst formatOptionsForSelect = (options) =>\n  options.map((option) => ({ value: option, label: option }));\n\nconst CountryPickerAutoCompleteDropdown = ({ handleCountryChange }) => {\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchcountries());\n    };\n    fetchAPI();\n  }, [setFetchedCountries]);\n\n  return (\n    <FormControl className={cx(styles.formControl, StylesProvider.formControl)}>\n      <Typography className={cx(styles.selectLabel)}>\n        Select a Country:\n      </Typography>\n      <Select\n        options={formatOptionsForSelect(fetchedCountries)}\n        isSearchable={true}\n        placeholder='Global'\n        onChange={(e) => {\n          handleCountryChange(e.value);\n        }}\n      />\n    </FormControl>\n  );\n};\n\nexport default CountryPickerAutoCompleteDropdown;\n"]},"metadata":{},"sourceType":"module"}